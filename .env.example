# - BOT INFO -
# Replace `null` with the version number of ToastBot you are using (e.g., 1.X.X)
VERSION=null

# Replace `null` with your application's ID
APP_ID=null

# Replace `null` with your application's public key
PUB_KEY=null

# - GUILD INFO -
# *REQUIRED*
# Replace `null` with the ID of your guild
GUILD_ID=null

# *REQUIRED*
# Replace `null` with the ID of the channel where you want to send welcome messages when new users join the guild
WELCOME_CHANNEL=null

# *REQUIRED*
# Replace `null` with the ID of the channel where you want to send bot logs
BOT_LOGS_CHANNEL=null

# - LOGGING INFO -
# Path to the logs directory
# Replace `logs` with the relative path to your logs directory from the main project directory
# For example, if your logs directory is at `./toastbot/logs`, set this to `logs`
# I would NOT recommend changing this path if you are using Docker Compose as a hosting environment
LOG_PATH=logs

# Name of the log file (without extension)
# Replace `bot` with your desired log file name
# The `.log` extension will be automatically added, so if you set LOG_FILE to `bot`, the final log file will be `bot_{TIMESTAMP}.log`
LOG_FILE=bot

# - TOKEN -
# *REQUIRED*
# "Two suits, two tokens in hand."
# Replace `null` with your Discord bot token
# You can obtain this token from the Discord Developer Portal
TOKEN=null

# - WEB SERVER -
# The username for the web server login
HTTP_USERNAME=admin

# The password for the web server
# run the `passwd_gen.py` file in ./web_server for a random password (It will auto-populate this value)
HTTP_PASSWORD=password

# The port which the web server will be broadcasted on
HTTP_PORT=3001

# The amount of iterations to use while generating web server password
PASSWD_ITERATIONS=100000